---
import type { GetStaticPaths } from "astro";
import { getCollection, getEntry } from "astro:content";
import Base from "@layouts/base/index.astro";
import BlurImageHeader from "@components/composite/header/BlurImageHeader.astro";
import ResponsiveWidth from "@components/layout/ResponsiveWidth.astro";
import H1Section from "@components/composite/section/H1.astro";
import Grid from "@components/layout/Grid.astro";
import FacultyCard from "@components/pages/teams/FacultyCard.astro";
import H2 from "@components/composite/heading/h2.astro";
import VSpace from "@components/layout/VSpace.astro";
import RecentWorks from "@components/pages/teams/RecentWorks.astro";
import { viewRank } from "@content";

export const getStaticPaths = (async () => {
  return (await getCollection("team")).map((team) => ({
    params: { slug: team.slug },
  }));
}) satisfies GetStaticPaths;

const team = await getEntry("team", Astro.params.slug);

const Rendered = await team.render();

const faculties = await getCollection(
  "member",
  (member) =>
    (member.data.occupation === "Faculty" ||
      member.data.occupation === "Researcher") &&
    member.data.team.slug === Astro.params.slug,
);

const students = await getCollection(
  "member",
  (member) =>
    (member.data.occupation === "Student" ||
      member.data.occupation === "Research Student") &&
    member.data.team.slug === Astro.params.slug,
);
---

<Base
  title={team.data.name}
  description={`HPCS研究室 ${team.data.name}チームの研究内容とメンバーの紹介、最近の研究業績一覧`}
>
  <BlurImageHeader imgSrc={team.data.cover.src} imgAlt={team.data.cover.alt}>
    {team.data.name} team
  </BlurImageHeader>
  <ResponsiveWidth>
    <div class="root">
      <Rendered.Content />
    </div>
  </ResponsiveWidth>
  <H1Section backgroundInverted={true} fullW={true}>
    <H2 slot="heading" backgroundInverted={true}>メンバー</H2>
    <Grid minW="30rem">
      {
        faculties
          .sort((a, b) => viewRank(b.data) - viewRank(a.data))
          .map((faculty) => <FacultyCard member={faculty.data} />)
      }
    </Grid>
    <VSpace h="1rem" />
    <Grid minW="20rem">
      {
        students
          .sort((a, b) => viewRank(b.data) - viewRank(a.data))
          .map((student) => <FacultyCard member={student.data} />)
      }
    </Grid>
  </H1Section>

  <H1Section>
    <H2>近年の成果</H2>
    <RecentWorks works={team.data.recentWorks} />
  </H1Section>
</Base>

<style>
  .root {
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }
</style>
