---
import Team from "@layouts/team.astro";
import { getEntries, getEntry } from "astro:content";
import H1Section from "@components/composite/section/H1.astro";
import Typography from "@components/display/Typography.astro";
import { Image } from "astro:assets";
import Grid from "@components/layout/Grid.astro";
import VSpace from "@components/layout/VSpace.astro";
import FacultyCard from "@components/pages/teams/FacultyCard.astro";
import StudentCard from "@components/pages/teams/StudentCard.astro";

const {
  data: { cover, faculties, students },
} = await getEntry("team", "perf");
---

<Team name="Performance team" imgAlt="Performanceチームの本棚" imgSrc={cover}>
  <H1Section headingText="額田 彰 教授">
    <Typography>
      コンピュータ分野においてパフォーマンス（性能）とは多くの場合は処理速度，計算スピードを意味します．
      このパフォーマンスチームが目標とするのは計算の高速化です．
      同じ内容の計算であっても，使用する計算機によって，プログラムの書き方によって実行時間が大きく異なります．
      特に近年の計算機に搭載されるプロセッサは複雑になってきて，その特徴を理解した上で適したコーディングを行い，
      そのプロセッサが本来備える性能を引き出す手法を研究するのがこのパフォーマンスチームです．
    </Typography>
  </H1Section>
  <H1Section headingText="研究内容">
    <Typography>
      GPU(Graphics Processing Unit)は名前の通り画像処理を担当するデバイスです．
      ３次元空間の可視化等の処理がコンシューマ向けでは３Ｄビデオゲーム，
      プロ向けではＣＡＤのような設計分野等で利用されています．
      特にゲーム業界の需要によって，より綺麗で高解像度，高フレームレートの描画を実現できるGPUが必要となり，
      高性能なデバイスが比較的低価格で提供されるようになりました．
      その結果として浮動小数演算性能として当時のCPUを上回るようになり，
      GPUを利用して一般的な計算の高速化の試みがはじまりました．
    </Typography>
    <Typography>
      GPUの特徴は非常に多数の演算器を搭載することです．
      画像処理が多数のデータに対して同じ計算を行うことから，
      より多くの演算器を搭載することを優先しています．
      その代わりに普通のCPUが備える色々な機能を省略したり犠牲にしたりしています．
      GPUの動作周波数もCPUより低く，多数の演算器を活用できるだけの並列性がなければ高速化が実現できません．
      目的となる計算内容をうまくGPUの構造に当てはめるにはどのようにプログラムを作成すればよいかを研究していきます．
    </Typography>
    <Typography>
      来年度配属学生の研究テーマとしてはこのGPU計算関係を予定しています．
      ある計算内容を対象にGPUを使って高速化を行うのがメインになるでしょう．
      GPU計算を支援する各種ソフトウェア開発も重要なテーマですし，
      あるいは希望があればGPU以外のCPUやメニーコアプロセッサも対象とします．
    </Typography>
    <Image src={cover} alt="Performanceチームの本棚" />
  </H1Section>
  <H1Section headingText="メンバー" fullW={true} backgroundInverted={true}>
    <Grid minW="30rem">
      {
        faculties.map((faculty) => (
          <FacultyCard member={faculty}>
            <Typography>{faculty.message}</Typography>
          </FacultyCard>
        ))
      }
    </Grid>
    <VSpace h="2rem" />
    <Grid minW="18rem">
      {
        students.map((student) => (
          <StudentCard member={student}>
            <Typography>{student.message}</Typography>
          </StudentCard>
        ))
      }
    </Grid>
  </H1Section>
</Team>
