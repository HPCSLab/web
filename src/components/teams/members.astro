---
export type Member = {
  name: string;
  role: string;
  keywords?: string[];
  message: string;
};

interface Props {
  members: Member[];
}
const { members } = Astro.props;
---

<table>
  <thead>
    <tr>
      <td>名前</td>
      <td>職位</td>
      <td>研究内容・メッセージ</td>
    </tr>
  </thead>
  <tbody>
    {
      members.map((member) => (
        <tr>
          <>
            <td>{member.name}</td>
            <td>{member.role}</td>
            <td>
              {member.keywords ? (
                <ul class="keywords-container">
                  {member.keywords.map((keyword) => (
                    <li>{keyword}</li>
                  ))}
                </ul>
              ) : null}
              <p>{member.message}</p>
            </td>
          </>
        </tr>
      ))
    }
  </tbody>
</table>

<style>
  td {
    min-width: 6em;
    padding: 0.3em 0 0.3em 0;
  }

  .keywords-container {
    display: block;
    margin: 0 0 0.5em 0;
  }

  .keywords-container > li {
    display: inline;
    margin: 0.5em 0.5em 0.5em 0;
    color: var(--color-keyword);
  }

  td {
    padding: 0.5em;
    line-height: 1.5em;
  }

  td > p {
    margin: 0.5em 0 0.5em 0;
  }

  thead {
    border-bottom: white 1px solid;
  }

  tr {
  }
</style>
