---
import { Icon } from "astro-icon/components";
import Typography from "@components/display/Typography.astro";
import type { Team } from "@content";
import { getEntry } from "astro:content";
import Session from "./Session.astro";

interface Props {
  team: Team;
  href: string;
}

const { team, href } = Astro.props;
---

<div class="root">
  <div>
    <Icon name={team.icon} class:list={["team-icon"]} />
  </div>
  <h2 class="team-name">
    <a href={href}>
      {team.name}
    </a>
  </h2>
  <section class="in-card-section">
    <Typography>
      {team.description}
    </Typography>
  </section>
  <section class="in-card-section">
    <h3>募集人数</h3>
    {
      team.bachelorInfo ? (
        <div class="capacities">
          {team.bachelorInfo.capacities.map((capacity) => (
            <div class="capacity">
              <div class="faculties">
                {capacity.faculties.map(async (facultyRef) => {
                  const faculty = await getEntry(
                    facultyRef.collection,
                    facultyRef.id,
                  );
                  if (faculty) {
                    return (
                      <a href={`/~${facultyRef.id}`} class="faculty-name">
                        {faculty.data.name
                          ? faculty.data.name
                          : faculty.data.eng_name}
                      </a>
                    );
                  }
                })}
              </div>
              <div class="capacity-n">
                {capacity.capacity}
                <span class="unit">人</span>
              </div>
            </div>
          ))}
        </div>
      ) : (
        <div>※学部での募集は行なっていません</div>
      )
    }
  </section>
  {
    team.bachelorInfo ? (
      <section class="in-card-section">
        <h3>説明会</h3>
        <div class="schedule-table">
          {team.bachelorInfo.informationSessions.map((session) => (
            <Session session={session} />
          ))}
        </div>
      </section>
    ) : (
      <section />
    )
  }
</div>

<style define:vars={{ teamColor: team.color }}>
  .team-name {
    font-size: var(--font-size-xl);
    font-weight: bold;
  }

  .team-name > a {
    text-decoration: underline;
    text-underline-offset: 3px;
    text-decoration-thickness: 1.5px;
  }

  .in-card-section {
    grid-column: 2;
    margin-top: 1rem;
    margin-bottom: 1rem;
  }

  .in-card-section > h3 {
    font-weight: bold;
    margin-bottom: 1rem;
    font-size: var(--font-size-lg);
  }

  .schedule-table {
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }

  .capacities {
    display: flex;
    flex-wrap: wrap;
    flex-direction: column;
    justify-content: space-between;
    gap: 1rem;
  }

  .capacity {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }

  .unit {
    color: var(--color-text-weak);
  }

  .faculties {
    display: flex;
    flex-direction: row;
    gap: 0.5rem;
    flex-wrap: wrap;
  }

  .faculty-name {
    text-decoration: underline;
  }

  .desc {
    grid-column-start: 2;
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }

  .root {
    display: grid;
    grid-template-columns: 2rem 1fr;
    grid-template-rows: subgrid;
    grid-row: span 4;
    gap: 0.5rem;
    background-color: var(--color-bg-white);
    padding: 1rem;
    border-radius: 0.2rem;
    color: var(--color-text-normal);
  }

  .team-icon {
    font-size: var(--font-size-2xl);
    border-radius: 50%;
    padding: 0.2rem;
    color: white;
    background-color: var(--teamColor);
  }
</style>
